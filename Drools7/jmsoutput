# JMH version: 1.32
# VM version: JDK 1.8.0_271, Java HotSpot(TM) 64-Bit Server VM, 25.271-b09
# VM invoker: /opt/jdk/oracle/jdk1.8.0_271/jre/bin/java
# VM options: -Xms10G -Xmx10G
# Blackhole mode: full + dont-inline hint
# Warmup: 5 iterations, 10 s each
# Measurement: 30 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 10 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.drools.perf.test.DroolsBenchmark.send

# Run progress: 0.00% complete, ETA 00:05:50
# Fork: 1 of 1
# Warmup Iteration   1: SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
309.151 ±(99.9%) 126.571 us/op
# Warmup Iteration   2: 162.398 ±(99.9%) 1.388 us/op
# Warmup Iteration   3: 159.479 ±(99.9%) 2.201 us/op
# Warmup Iteration   4: 157.402 ±(99.9%) 1.619 us/op
# Warmup Iteration   5: 148.922 ±(99.9%) 1.856 us/op
Iteration   1: 148.584 ±(99.9%) 2.004 us/op
Iteration   2: 150.423 ±(99.9%) 1.862 us/op
Iteration   3: 149.988 ±(99.9%) 1.975 us/op
Iteration   4: 145.707 ±(99.9%) 2.486 us/op
Iteration   5: 145.132 ±(99.9%) 3.091 us/op
Iteration   6: 146.363 ±(99.9%) 1.886 us/op
Iteration   7: 147.294 ±(99.9%) 2.026 us/op
Iteration   8: 147.781 ±(99.9%) 1.591 us/op
Iteration   9: 157.948 ±(99.9%) 2.685 us/op
Iteration  10: 150.323 ±(99.9%) 1.491 us/op
Iteration  11: 153.857 ±(99.9%) 2.398 us/op
Iteration  12: 147.326 ±(99.9%) 0.926 us/op
Iteration  13: 146.642 ±(99.9%) 1.648 us/op
Iteration  14: 147.900 ±(99.9%) 2.005 us/op
Iteration  15: 152.421 ±(99.9%) 1.945 us/op
Iteration  16: 149.840 ±(99.9%) 2.058 us/op
Iteration  17: 146.223 ±(99.9%) 1.569 us/op
Iteration  18: 147.807 ±(99.9%) 1.400 us/op
Iteration  19: 152.782 ±(99.9%) 3.182 us/op
Iteration  20: 147.172 ±(99.9%) 1.374 us/op
Iteration  21: 147.062 ±(99.9%) 0.536 us/op
Iteration  22: 145.585 ±(99.9%) 2.413 us/op
Iteration  23: 145.397 ±(99.9%) 1.807 us/op
Iteration  24: 144.642 ±(99.9%) 1.222 us/op
Iteration  25: 146.092 ±(99.9%) 1.611 us/op
Iteration  26: 142.849 ±(99.9%) 1.599 us/op
Iteration  27: 140.884 ±(99.9%) 1.863 us/op
Iteration  28: 141.955 ±(99.9%) 1.418 us/op
Iteration  29: 142.578 ±(99.9%) 1.641 us/op
Iteration  30: Executed = Found = false Executed = 23146700. rule found = 22029985 distinct rules
142.299 ±(99.9%) 1.581 us/op


Result "com.drools.perf.test.DroolsBenchmark.send":
  147.362 ±(99.9%) 2.510 us/op [Average]
  (min, avg, max) = (140.884, 147.362, 157.948), stdev = 3.757
  CI (99.9%): [144.852, 149.872] (assumes normal distribution)


# Run complete. Total time: 00:05:52

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark             Mode  Cnt    Score   Error  Units
DroolsBenchmark.send  avgt   30  147.362 ± 2.510  us/op

